apiVersion: v1
kind: ConfigMap
metadata:
  name: skf-flask-back
data:
  SKF_JWT_SECRET: please_change_this_value_to_be_random
  # Always use HTTPS in the below ENV
  SKF_API_URL: "https://demo.securityknowledgeframework.org/api"
  SKF_FLASK_DEBUG: "False"
  #SKF_DB_URL: sqlite:///db/db.sqlite
  SKF_DB_URL: mysql+pymysql://root:admin-skf-secret@mysql.mysql.svc.cluster.local/skf?charset=utf8mb4
  SKF_DOJO_API_KEY: optional
  SKF_TESTING: "False"
  # labs always need to use HTTP and NOT HTTPS
  SKF_LABS_DOMAIN: "http://labs.securityknowledgeframework.org"
  SKF_LABS_DEPLOY_MODE: "port"
  # or use the below to use subdomains to deploy the Labs by creating a subdomain Wildcard that points to the Labs IP cluster
  #SKF_LABS_DEPLOY_MODE: "subdomain"
  RABBIT_MQ_CONN_STRING: rabbitmq
  ORIGIN: skf-flask-back
  #GOOGLE_CREDENTIALS: base64_string_here_of_the_content_of_the gsa-key.json file_for_example: cat gsa-key.json | base64
  LABS_KUBE_CONF: YXBpVmVyc2lvbjogdjEKY2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VONVJFTkRRV0pEWjBGM1NVSkJaMGxDUVVSQlRrSm5hM0ZvYTJsSE9YY3dRa0ZSYzBaQlJFRldUVkpOZDBWUldVUldVVkZFUlhkd2NtUlhTbXdLWTIwMWJHUkhWbnBOUWpSWVJGUkpkMDFVUlhsUFZFVjZUV3BOTVUxV2IxaEVWRTEzVFZSRmVVNTZSWHBOYWsweFRWWnZkMFpVUlZSTlFrVkhRVEZWUlFwQmVFMUxZVE5XYVZwWVNuVmFXRkpzWTNwRFEwRlRTWGRFVVZsS1MyOWFTV2gyWTA1QlVVVkNRbEZCUkdkblJWQkJSRU5EUVZGdlEyZG5SVUpCVEVsWkNsUklWamhtTUdkYWNIZFhUVkEwUzNwMWFqSk9VVmxvUlZWRVowSkJaWFprY214NmFUbE1SbXAyYUdka0t6UlpUalpSUzNCVFZYbGxlVWRWVlhoM1FuTUtiVXA2WkhReFEwVm9OamQxVWxkRUwwRlBibUZVY0ZJMFNsQjRVMjVaVW5aMlZUUnRWRVkyUzJ4aFozcG1hM2hZZEZKR2FqaHZiMkkxWTNFeVJHa3plZ3BTVEhrMU1IUXhjMUoxVUhsRGFYQldVakpOUlhsWWMzazRUa1pyZVd0NlJGbExXRm95TW5kMGJqbDZjWFUxVkRGSVFXRm5ObkZqTVZaeWJEZG1RVkJOQ2tGNFNFZ3hOMUJRUnpGWk5IWm1hRWhuYW5WelZYZGxVVWxDWmtORGQza3pPR1JoUTFoNVRXNXBhMnhLYTNjME9IaDFSV3czYjNjeGEwMTNOSE5UWm1FS1RHZHNTMGhDY1RFeFZVSk5UVWt6TVV4SlRYUlRWSGs0YkRaeU56QjFWVWxXZHpFcmFYQldVa3BIVms5WVRqRllialp1UW5WRk9FczRhVUZtT0U1SldBcEhXVmhOWmxwRllVUnJiME41YmtONlNHUXdRMEYzUlVGQllVMXFUVU5GZDBSbldVUldVakJRUVZGSUwwSkJVVVJCWjB0clRVRTRSMEV4VldSRmQwVkNDaTkzVVVaTlFVMUNRV1k0ZDBSUldVcExiMXBKYUhaalRrRlJSVXhDVVVGRVoyZEZRa0ZKU1hwNU4ycExka0ZvSzJaMFIyMVlVazQxVm5Cc2NXSTFUR1lLYjNaalVXdE9ORFJuYVhremMwOU1NVWx0VjBKaGRGSXdiRE5tY0VGbVpVbDZlRk5tSzFFdlYzb3Jiblp5UXpFM2NXdHdNRzluZVZoNFVEVm9abkptWkFvdk1IZE9ValJWTTAxYU9IZG1SMDFwYUZsQmNreFpVMHgzUWpocmNURjRkbmt4TXpacFJuUnlaVE5uYVdOSWExQkxlbWRuVFZoeVdFbERVbkZHUjBFM0NtRkhiblZ3Tkc1c1NEbGpVVUY2VW14UVpFTjFXREJXWW1saU1uSmFWbmh1VjBGdE4yUmFkbVpSUVZFdlMwdEdWelV3ZUhGWlFWUXpWRms0Y1ZobVNIZ0taMGRVTjJKWlRrNTZSazVSTjFKdWMzTkRZMlJzZW1KTU0yTjJZV0owZG0xMWFtVk9WMUJZZVZCd1N5dDFhalpGTVhkaFprRnRXRUpIUkM4dk1qUXlTUXB0VUZGMFR6RTFWMkl6UlZCUWRVcGpPVVEyWm1sNGN6Y3lRbGhUWTNwcWJ6bDFSV2NyWVN0Rk9XeDVXRVV5YlhONmRqRXdiblowWkZGeFVUMEtMUzB0TFMxRlRrUWdRMFZTVkVsR1NVTkJWRVV0TFMwdExRbz0KICAgIHNlcnZlcjogaHR0cHM6Ly8xOTIuMTY4LjAuMjAwOjg0NDMKICBuYW1lOiBrdWJlcm5ldGVzCmNvbnRleHRzOgotIGNvbnRleHQ6CiAgICBjbHVzdGVyOiBrdWJlcm5ldGVzCiAgICB1c2VyOiBrdWJlcm5ldGVzLWFkbWluCiAgbmFtZToga3ViZXJuZXRlcy1hZG1pbkBrdWJlcm5ldGVzCmN1cnJlbnQtY29udGV4dDoga3ViZXJuZXRlcy1hZG1pbkBrdWJlcm5ldGVzCmtpbmQ6IENvbmZpZwpwcmVmZXJlbmNlczoge30KdXNlcnM6Ci0gbmFtZToga3ViZXJuZXRlcy1hZG1pbgogIHVzZXI6CiAgICBjbGllbnQtY2VydGlmaWNhdGUtZGF0YTogTFMwdExTMUNSVWRKVGlCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2sxSlNVTTRha05EUVdSeFowRjNTVUpCWjBsSlZWY3lWbEYzYUVwWll6aDNSRkZaU2t0dldrbG9kbU5PUVZGRlRFSlJRWGRHVkVWVVRVSkZSMEV4VlVVS1FYaE5TMkV6Vm1sYVdFcDFXbGhTYkdONlFXVkdkekI1VFVSRmVFMXFhM2hOZWtsNlRsUkdZVVozTUhsTlZFVjRUV3ByZUUxNlNUQk5WR3hoVFVSUmVBcEdla0ZXUW1kT1ZrSkJiMVJFYms0MVl6TlNiR0pVY0hSWldFNHdXbGhLZWsxU2EzZEdkMWxFVmxGUlJFVjRRbkprVjBwc1kyMDFiR1JIVm5wTVYwWnJDbUpYYkhWTlNVbENTV3BCVGtKbmEzRm9hMmxIT1hjd1FrRlJSVVpCUVU5RFFWRTRRVTFKU1VKRFowdERRVkZGUVhKcFUxZEdTVzlxYVVSUVJHZFRWRTRLV25OMWQyUlJSSE01VVM5VU1HdzFSMmRyWVhwbFYxaEJaWGg1YkhWbFdWaE9SVGhRWTBwSVRVNW9ObE14ZEhKWFIwUjVaMFEyVEZReVUxUk9SMWt5S3dweU1XSlNOWGcxSzNnM1lVVk1VeTlJWTBaVE9VVndORXRTWjFkUFJVNVNWa2htY205VUwxSnZSVXRhWVVoVmIzcGFUVmhLY3pKVVdFTm9XWEZETlVoR0NraEdLeXRPVHpOSGVWUlpkVGhFWW1GNVlUUlFiV294WVU1clpVcFFRMUJMZGpGTGNrZE5SSEZWZDFKTVVYQmxXbGg1TTFoTlVWaFJRbWhHVTBWWWRXRUtOMnQwU0U4eFFrUXpkMWR0VEhaWVZFRlBMMHhGV21nclUwdGpNbVpxYlZGaVl5OXhhbTh6UTJzeGFFeElRMWN6WVRSaWFXRXZWbkpxUWs5RWJrbElOUXB3VFZGUVoybEtObE5sVkZKa05UTkxSazA1ZEdKUkszSTNURWR6UkVGV0wxTkpZaTh5Y2tsMFdFbzJXbU5hTkhGaWNVVjBVM0paU21KeFVrcFlZVWs1Q2xsNk4xUmhkMGxFUVZGQlFtOTVZM2RLVkVGUFFtZE9Wa2hST0VKQlpqaEZRa0ZOUTBKaFFYZEZkMWxFVmxJd2JFSkJkM2REWjFsSlMzZFpRa0pSVlVnS1FYZEpkMFJSV1VwTGIxcEphSFpqVGtGUlJVeENVVUZFWjJkRlFrRklabkZDY2xOTGVFUXhlSGhDYnpGblJEWmlRa1I1UlUxMGFVdGxSVkJIVUd4VldRcHpjSGRQTmtWQ0wxcFpiVUpZYTNoT2NqVllZbE5vS3l0R1FtOXRjVlZrUW10UFdXdEZjR2xWUkU5QlkyeHlNeXRoY0ROS2FWVmpURGt6ZUdwSk9HRnhDbkZOU1N0cGJubDZZVUZvWlcxaWNGaDJTMFYwY1ZGTWVGQnRSMHBzYUdKR1lVRnZlVWREVFhCV1NtVmpTakZNTTBsTVVIRnZUV05wVTJsTGRVNXFRbmdLYWxkMFkzWjJhMkkwTW5sTlRYZHVSVGg0UkZacVQwNDNWbEZsU2tJMlJsazBXWGg0VFdaTGFuZExiR3RSUmtoaFZrZHVkelJSWml0dVRUbElMMllyU0FvNU9XcDRkV3B3VUhGVWJtcHpkbkpvWVdoclFYbHBZa2RqYkZjMGF6aFljblF4TXpCTVUwaFZOVE13WW5CSVJGWlpWRVpvTjFkcVFWWk5Wa2xwZVV4YUNqQktZbFpETTBwaVpuVlBOWFp6Wlc0MGRGb3ZPVkJLTkhoVFlscHVaVGhRVVZsb1FXc3dZemxZVVVwNGN6aEplakUzY3owS0xTMHRMUzFGVGtRZ1EwVlNWRWxHU1VOQlZFVXRMUzB0TFFvPQogICAgY2xpZW50LWtleS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJTVTBFZ1VGSkpWa0ZVUlNCTFJWa3RMUzB0TFFwTlNVbEZiM2RKUWtGQlMwTkJVVVZCY21sVFYwWkpiMnBwUkZCRVoxTlVUbHB6ZFhka1VVUnpPVkV2VkRCc05VZG5hMkY2WlZkWVFXVjRlV3gxWlZsWUNrNUZPRkJqU2toTlRtZzJVekYwY2xkSFJIbG5SRFpNVkRKVFZFNUhXVElyY2pGaVVqVjROU3Q0TjJGRlRGTXZTR05HVXpsRmNEUkxVbWRYVDBWT1VsWUtTR1p5YjFRdlVtOUZTMXBoU0ZWdmVscE5XRXB6TWxSWVEyaFpjVU0xU0VaSVJpc3JUazh6UjNsVVdYVTRSR0poZVdFMFVHMXFNV0ZPYTJWS1VFTlFTd3AyTVV0eVIwMUVjVlYzVWt4UmNHVmFXSGt6V0UxUldGRkNhRVpUUlZoMVlUZHJkRWhQTVVKRU0zZFhiVXgyV0ZSQlR5OU1SVnBvSzFOTFl6Sm1hbTFSQ21KakwzRnFiek5EYXpGb1RFaERWek5oTkdKcFlTOVdjbXBDVDBSdVNVZzFjRTFSVUdkcFNqWlRaVlJTWkRVelMwWk5PWFJpVVN0eU4weEhjMFJCVmk4S1UwbGlMekp5U1hSWVNqWmFZMW8wY1dKeFJYUlRjbGxLWW5GU1NsaGhTVGxaZWpkVVlYZEpSRUZSUVVKQmIwbENRVUZtZERCdlpVMDBjVVpKSzJoWVpncFFlSEl6UnpCdE5HbFNSaTlpZGpKa1NGVnFRbEF4Y1M5eU1IWnlkV2RCUlRSbWJWaDJMMUUwVEhwM2JtMUVaMEZNY3psaWN6QTBRemd2U201SmJ5dFFDbFJMWkdaS1NpdEtWeXQ0Y2l0M2FYcHlSR3RLU1hKTEsxUXliSGQ0TURoek1qbE9TbTlXY0VOdWNIQnFaVXRpYzNkbWNFMXdlWEJ5TlZBMmIyczNSMFFLUzFvMWNFaGFaamRYTlcwNWVHUldZVXRuZDFWNVRrVldRMmMxSzJ0QmVVdElURTkxU2xsRWFFNUxZVE56UjBrNFZXTXdaVkpqVEU5aldFSjVWRFpLTmdwRmJucERTSGR5YmtkYWVqQTFUMjFqV25WeGNHaERVbmRwU25Ka1RuSm9iM2cxWjFrdmFrdFZiSFpDTlRCNVJGbFNVekJrUnpORVMxRnRiR2xJYWtOakNuWXljVmhCYUUxR1VXeFhiMGhhVFV0dVpYRk5hVlZYUzBOTFZIUkZhRzluZEVsVFowZGpXRGxNVWxKamNqUlJVRGxKVlhSRGFYTkxVMjFJUWxabVIxUUtSbWRsYzJGRlJVTm5XVVZCTldsb1ZHSk9iVmd6UlVsUmExUnZSbGhFV1RBNGFuWnBVVlJUTmxKWVZscHplRVZtWml0TlRqQkNNWEZCYkV0dlZtOVhkUXBoUkRCU2NWSnVZbU5wVnpVclQxVkhZbkEwVTBKdmNVMHZNVFEzUW1kclRsbE5Wbmt5WkdRdlRuQkJXbGxGZUdwbFVqUjZVR0oxV1U4MmRWSnBRelpLQ21SUmJqTlVSR0V5ZDNKcWRIcExRV0p4VGxVemJVOXhaMEZuU2xZNFUySkNTalZoYTFOc1VWZE9kRUkzU1dSYWVFVlpkMGxSU1dORFoxbEZRWGRpU1hJS2FYSkxlV1ZJU0c4eGNrODNkMFJoU1haaGJsQklVbXg1VkVSU2RHWmhWMlZSVDFKd1JVZDRUVEJXVVRKME1ucEZLMFJ4VVhKcFpHaFdWV2R6TjNRdmRncE1NMW8wUTBKWFluWm1aak5PYlRkR1pHNUhOSFJHWlZSalkwWkJUR2M1WVU1aldGaDZRbmhxVjJSS1IzQTNjRTlzYm5sUllrbGxPR3haT0N0SU1VZFlDbTFFYkVSTU5FcGFVMHgxV0ZGS1prY3ZObWd2VjBaSFJqbHhWbXRPUmtkU0sycEJOa0YyTUVObldVVkJlbGRTVGxaelZYbzNWalpVYkVaYU16bENkRE1LTUc1bk5HRkZTbUYyUzA5R05HWlJNRGRTWVRrckszaFVOM3BESzJjd1FWaE1XRlJoVEhSTmFHSTVUbFpFUmxkMVJVMWtSbWhOY21WSGQwdEliamxKZVFwUGVISmFZa3RuVVVsaGQydDVWR2hEVTFKTU0xaFhOM00wYzNOM1R6VjRNRVpLZEVwTmNERmtTMXBoU1hWSFVteGhjSGxyVjJaV0wzZ3ljelJOVGxkS0NqVXZPV0ZMS3paM1UwVm9lWEZtWWtwMmIxQTVNVlE0UTJkWlFYcHZOSGcwVEdGMmJUaElaR2w0WjJkSU9XOUlLMFJ2Wkc4cmNDc3JUVlIyTDJjeVpuUUtXbEJsWkhGVlNGSnFUMGxLYUV4WUsyUTFObUY2TWxScWJEVndha1pPUW5ac2RWaHdVV1J0UkdrNVoyTmhkWFUxTmtKbFZpOU5UVk5WVEUxTWJFbDNOQXBUWTFvcldrSk5XVzU2WVROQlRGSjVObXRMVjNKS2JHRlNhRmxLZHpOaWJUTnNNVXhFVkZaQlluTkxhMDVrUzFneGFGRmtUalUyTDFsMGFWVkhhWE5SQ25sRmNYWkJVVXRDWjBkeFNsSnJXRmgxY0U1c2FHbHRWMDEyVkhoR2NsVXpUa05FYWk5WE0zSk9SVWt5ZEVOeU1HUlRMeTk1VWl0bmVESkVUVmQwU0VrS00xWmhjamx5ZEhZMGFGZGFkMUZPYWpoTWRVRm1XVWhtVERVMmRYWm5jMmRqUW1sSlNVVjROMlpWYzIxalQzVnNVbWd6Y0ZwTlJEVTVVWFpOV0d4TFpncGljQ3M0U1RWaGFWbHpSVGxNZUN0alZGQkdUMFV6ZUhOTU1rZzFhVGxLZFVncmNGQXlkbkpWT0hGQlRESnlSaTk2VGtSSkNpMHRMUzB0UlU1RUlGSlRRU0JRVWtsV1FWUkZJRXRGV1MwdExTMHRDZz09Cg==
  #LABS_KUBE_CONF: base64_string_here_of_the_content_of_the .kube/config file_for_example: cat ~/.kube/config | base64
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: skf-flask-front
data:
  # Always use HTTPS in the below ENV
  FRONTEND_URI: https://demo.securityknowledgeframework.org
  # To skip login, provide any value different than skfprovider to the SKIP_LOGIN variable
  SKIP_LOGIN: skiploginprovider
---  
apiVersion: v1
kind: ConfigMap
metadata:
  name: rabbitmq
data:
  RABBITMQ_DEFAULT_USER: admin
  RABBITMQ_DEFAULT_PASS: admin-skf-secret
---  
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql
  namespace: mysql
data:
  MYSQL_ROOT_PASSWORD: admin-skf-secret
  MYSQL_DEFAULT_USER: root
  MYSQL_DEFAULT_PASS: admin-skf-secret
  MYSQL_DATABASE: skf
